{"version":3,"file":"static/js/247.a94200b6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/ContactsPage.module.css?3d45","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"full\":\"ContactForm_full__ZH46S\",\"add\":\"ContactForm_add__2y4N5\"};","import { getContacts } from '../../redux/selectors';\n// import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\n\nimport css from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = (name, number) => {\n    return contacts?.find(contact => contact.name === name)\n      ? toast.error(`${name} is already in contacts`)\n      : dispatch(\n          addContacts({\n            name,\n            number,\n          })\n        );\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default: {\n        return;\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact(name, number);\n    onDelete();\n  };\n\n  const onDelete = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.full}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        value={name}\n        placeholder=\"Name\"\n        required\n      />\n      <input\n        className={css.full}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handleChange}\n        value={number}\n        placeholder=\"Number\"\n        required\n      />\n      <button className={css.add} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = e => {\n    dispatch(deleteContact(e.target.dataset.id));\n  };\n\n  return (\n    <ul>\n      {contacts?.map(({ id, name, number }) => {\n        return (\n          <li className={css.item} key={id}>\n            <p>{`${name}: ${number}`}</p>\n            <button\n              className={css.btn}\n              onClick={handleDeleteContact}\n              type=\"button\"\n              data-id={id}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"full\":\"Filter_full__ozpba\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterAction } from '../../redux/filter/slice.filter';\nimport { getFilter } from 'redux/selectors';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(changeFilterAction(e.target.value));\n  };\n\n  return (\n    <div className={css.box}>\n      <input\n        className={css.full}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactsPage_box__hZjJ3\",\"title\":\"ContactsPage_title__TdWmn\",\"title__secondary\":\"ContactsPage_title__secondary__TghfS\",\"circle\":\"ContactsPage_circle__1Kn5U\"};","import { Box } from 'components/Box';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport css from './ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  return (\n    <Box>\n      <span className={css.circle}></span>\n      <div className={css.box}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title__secondary}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Box>\n  );\n}\n"],"names":["ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","target","value","onDelete","className","css","onSubmit","preventDefault","find","contact","toast","addContacts","handleAddContact","type","pattern","title","onChange","placeholder","required","ContactList","getFilteredContacts","useEffect","fetchContacts","handleDeleteContact","deleteContact","dataset","id","map","onClick","Filter","filter","getFilter","changeFilterAction","ContactsPage","Box"],"sourceRoot":""}